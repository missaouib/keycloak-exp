{
  "id" : "test",
  "realm" : "test",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "none",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "c0b7ffdd-539d-4cfd-a84d-214ee333d2d3",
      "name" : "default-roles-test",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "test",
      "attributes" : { }
    }, {
      "id" : "cac53516-64e8-4d46-9588-d8c0ecbbacf5",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "test",
      "attributes" : { }
    }, {
      "id" : "8466484f-ab11-453c-86b3-8a8382c1cbef",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "test",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "6e9f5e3b-9ea4-480d-982a-5e3835643620",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "ba032a96-c183-4128-a1ac-60e3b88d1aaf",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "bfc3dd4e-bf65-4669-b35c-98ad95d9cfc4",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "a1575dd3-6848-46a4-be3e-e5f67f3c0852",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "3cbf084f-47da-4eaf-a3f4-3df0d1310a9e",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "create-client", "query-groups", "manage-realm", "query-realms", "view-clients", "manage-clients", "impersonation", "manage-authorization", "query-users", "view-users", "manage-events", "view-identity-providers", "view-realm", "manage-identity-providers", "view-events", "manage-users", "query-clients", "view-authorization" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "4717b1f0-27df-47c2-896f-0ef3f70e8e5e",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "a0312317-a79c-4217-b4e7-8c54a5a83c84",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "9e3788e7-6132-4781-abee-910b8f8240f7",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "2111a188-b213-483e-8114-42e623f59e2f",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "aae9c027-609f-486f-846c-66d1a32eb1c4",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "845c031e-dbdd-4712-bba7-12b4d4b8c9ea",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "f09aeb6f-dcbd-4c1b-9750-cb0dc4606ccf",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "d7c7baeb-55b6-4e3b-a8e3-aa434073c59c",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "ee259098-5cdf-4316-b6ef-fdc1a05a67ad",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "a2a2f01b-0295-431a-bf84-1748e7180894",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "783570ac-b73a-45b6-8d11-704919966774",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "fe146388-a8a5-4411-8e34-ccec1617c2ba",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "1954c9de-963b-4490-a998-41024584a783",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      }, {
        "id" : "8bede240-de11-4ed1-9e21-22b5e4b17ef3",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
        "attributes" : { }
      } ],
      "test-client-id-1" : [ {
        "id" : "ad9b7ca9-dc2a-4660-a011-ee2857356789",
        "name" : "Access test Client 1",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6cd7dff-c491-4847-a848-780448ffcddd",
        "attributes" : { }
      } ],
      "test-client-id-2" : [ {
        "id" : "a4313527-65b7-4792-b874-7e2e30eb238c",
        "name" : "Access test Client 2",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "09685d6b-5565-4fce-be18-d164be8370c7",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "47f82d0f-128d-46c0-b9f4-79aecfcbbf91",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ab3ae947-098a-4b0e-94d3-3fdd20e12fac",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "7b642879-b780-4bd5-aad3-802c9e8cc84d",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "90bff8a9-cc5c-415b-8a4a-dfe4e1539e8e",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "5e65d8c8-e1a2-4a62-9991-7effb1aeae33",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "9aebaa87-a24d-4962-83fd-f23c1d8d2733",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "98f07c94-8609-4a32-9835-1ae3904be592",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "b4e9cc6e-7d3d-427b-a453-dd86439ad87b",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      }, {
        "id" : "b48acf17-db1d-491e-ba82-6d9c58382355",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "fce173fa-b2bb-4695-99c8-a4d447a68dc1",
    "name" : "Test1",
    "path" : "/Test1",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : {
      "test-client-id-1" : [ "Access test Client 1" ]
    },
    "subGroups" : [ ]
  }, {
    "id" : "24bf5d89-a91b-4968-b782-7096203aef04",
    "name" : "Test2",
    "path" : "/Test2",
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : {
      "test-client-id-2" : [ "Access test Client 2" ]
    },
    "subGroups" : [ ]
  } ],
  "defaultRole" : {
    "id" : "c0b7ffdd-539d-4cfd-a84d-214ee333d2d3",
    "name" : "default-roles-test",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "test"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "test-client-id-1" : [ {
      "clientScope" : "test",
      "roles" : [ "Access test Client 1" ]
    } ],
    "test-client-id-2" : [ {
      "clientScope" : "test",
      "roles" : [ "Access test Client 2" ]
    } ],
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "b2561f82-cc0f-4897-8d15-efc1ab6b3d4f",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "29facfc4-1d38-41e9-bfe5-1b84cc73f0dc",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "c76a219c-2507-462d-8088-2474ba2d6c8f",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7a52a863-b697-4fd6-9666-32db8fcd782e",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ab3ae947-098a-4b0e-94d3-3fdd20e12fac",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c9904c52-278c-4779-9f1a-19c6295f2b81",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "311ca2a6-784e-460b-8dff-de4cfdf3fa1b",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/test/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/test/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "45d129bd-3c8f-416f-8f4a-eeb0333352dd",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d6cd7dff-c491-4847-a848-780448ffcddd",
    "clientId" : "test-client-id-1",
    "name" : "test-client-1",
    "description" : "test-client-1",
    "rootUrl" : "",
    "baseUrl" : "http://client1.local:9091",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "vJs6die7kEXPFOowN8SpYvD9lZ9Fui9T",
    "redirectUris" : [ "http://localhost:9091/*", "http://client1.local:9091/*", "http://127.0.0.1:9091/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : true,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "client.secret.creation.time" : "1654612016",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : {
      "browser" : "624983ce-d5f3-44ed-843f-fd5e369fadce"
    },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "test", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone" ]
  }, {
    "id" : "09685d6b-5565-4fce-be18-d164be8370c7",
    "clientId" : "test-client-id-2",
    "name" : "test-client-2",
    "description" : "test-client-2",
    "rootUrl" : "",
    "baseUrl" : "http://client2.local:9092",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "Txfe7MHuliMSePg5lBiMz3s53ZPb4xXK",
    "redirectUris" : [ "http://127.0.0.1:9092/*", "http://localhost:9092/*", "http://client2.local:9092/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : true,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "client.secret.creation.time" : "1654612158",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : {
      "browser" : "cee44c81-9a57-470b-9941-d463e8486aff"
    },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "test", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone" ]
  } ],
  "clientScopes" : [ {
    "id" : "28ea90bf-d41e-4fb9-a292-d2dbd4974c12",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "2850fd6d-3f7d-4419-b407-41b4f768aa50",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "61843afd-88d0-4f16-b339-55703430c6ef",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "8a7e239d-77c5-4ab7-8b2a-d2665750c08e",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8a5fe88c-de2a-4ae4-a076-a22d6aa05345",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cdbdf190-ad69-4d08-87c5-ff309fd80088",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "52a6369a-b01f-47bd-bc2b-af047408a504",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1c8bf17d-f724-4797-987d-199818d4ff16",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e7c035c6-76f7-4631-87ad-5cd84e6dedb5",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c580003a-e1ce-4314-875b-4d9cfbba7088",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dc013826-f46b-4bf7-a90a-266ea7b3717e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4445fc1f-17cc-4a75-8126-a3c2dba10e39",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "1269f309-95cc-4741-a2ef-8b57486f28b6",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "42d216ae-dc90-4c69-b492-2a0024a1555b",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c814073a-b313-420c-b7c0-5c5cfeccaf50",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e9ee95b2-81ea-45ee-944d-955f9903932c",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3462c7b-2ba0-41bd-994a-2870f221709a",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "2636337c-2c6a-4dfe-82ff-f386681d0ecc",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "43fc88db-6aa6-4e18-bc62-8b4b9a2fae7e",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "f932327c-ac31-4bb0-a0fa-bd61a006d5d8",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1f8da4bf-c364-40ea-8dff-9ac97d2c232a",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "c2257fd8-d87a-4512-82f9-790b246e1635",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a05d69f6-e1d9-4dc8-97e4-16dd4fe7c4fd",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "fc203984-02af-4e64-b8ad-baf0d620c744",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8cf312a7-3655-41b2-b1f4-6e47b579945a",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e141af54-5613-46e0-ac26-9e866a2e42ee",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "23f89dc3-fbcd-4cc0-84ef-5d551db0c5a4",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "cf44ac1f-aebb-4d02-bba4-55c8da83e531",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "f91f52bd-e9d1-4f03-b3c1-019f58d04f88",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "88b3f87f-633f-4dcb-80a8-59f28e02321c",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fb17a0cf-4e0a-4886-8888-78a02257be61",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "dc416c11-0636-44e3-a382-42623d2cc744",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1671369a-ba77-4260-bac2-c88749e4cee4",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "18a12248-00db-4621-8539-f663ea5d5963",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "281e3791-fbaf-4e7c-962b-d17691a5a891",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "4fb0f0f0-a956-4fd1-91e8-8af7f888e0cb",
    "name" : "test",
    "description" : "test-client-[1/2] common scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "17a296b4-2496-416b-a5eb-4e9d57414da9",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ff2faa83-51cf-465a-86a0-6b7f300efc41",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "b2fb8981-6b8a-4221-be9e-a97dc9fbe857",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : true,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", "VERIFY_PROFILE_ERROR", "REMOVE_TOTP", "REVOKE_GRANT", "UPDATE_TOTP", "LOGIN_ERROR", "CLIENT_LOGIN", "RESET_PASSWORD_ERROR", "IMPERSONATE_ERROR", "CODE_TO_TOKEN_ERROR", "CUSTOM_REQUIRED_ACTION", "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR", "RESTART_AUTHENTICATION", "IMPERSONATE", "UPDATE_PROFILE_ERROR", "LOGIN", "OAUTH2_DEVICE_VERIFY_USER_CODE", "UPDATE_PASSWORD_ERROR", "CLIENT_INITIATED_ACCOUNT_LINKING", "TOKEN_EXCHANGE", "AUTHREQID_TO_TOKEN", "LOGOUT", "REGISTER", "DELETE_ACCOUNT_ERROR", "CLIENT_REGISTER", "IDENTITY_PROVIDER_LINK_ACCOUNT", "DELETE_ACCOUNT", "UPDATE_PASSWORD", "CLIENT_DELETE", "FEDERATED_IDENTITY_LINK_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN", "CLIENT_DELETE_ERROR", "VERIFY_EMAIL", "CLIENT_LOGIN_ERROR", "RESTART_AUTHENTICATION_ERROR", "EXECUTE_ACTIONS", "REMOVE_FEDERATED_IDENTITY_ERROR", "TOKEN_EXCHANGE_ERROR", "PERMISSION_TOKEN", "SEND_IDENTITY_PROVIDER_LINK_ERROR", "EXECUTE_ACTION_TOKEN_ERROR", "SEND_VERIFY_EMAIL", "OAUTH2_DEVICE_AUTH", "EXECUTE_ACTIONS_ERROR", "REMOVE_FEDERATED_IDENTITY", "OAUTH2_DEVICE_CODE_TO_TOKEN", "IDENTITY_PROVIDER_POST_LOGIN", "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR", "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR", "UPDATE_EMAIL", "REGISTER_ERROR", "REVOKE_GRANT_ERROR", "EXECUTE_ACTION_TOKEN", "LOGOUT_ERROR", "UPDATE_EMAIL_ERROR", "CLIENT_UPDATE_ERROR", "AUTHREQID_TO_TOKEN_ERROR", "UPDATE_PROFILE", "CLIENT_REGISTER_ERROR", "FEDERATED_IDENTITY_LINK", "SEND_IDENTITY_PROVIDER_LINK", "SEND_VERIFY_EMAIL_ERROR", "RESET_PASSWORD", "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR", "OAUTH2_DEVICE_AUTH_ERROR", "UPDATE_CONSENT", "REMOVE_TOTP_ERROR", "VERIFY_EMAIL_ERROR", "SEND_RESET_PASSWORD_ERROR", "CLIENT_UPDATE", "CUSTOM_REQUIRED_ACTION_ERROR", "IDENTITY_PROVIDER_POST_LOGIN_ERROR", "UPDATE_TOTP_ERROR", "CODE_TO_TOKEN", "VERIFY_PROFILE", "GRANT_CONSENT_ERROR", "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR" ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "991cb3a3-1bfa-490c-aa40-0b189d242317",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "04b0162d-88b4-44f8-83d3-e289a72faff8",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a8c60366-a56d-4861-8793-ef2013e9c0f8",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "9d922521-a75b-4c3a-b877-5ab0d693ff77",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "8791dc03-95e8-4fd6-80c1-c3daf22eabe6",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "1b03f504-8ad1-4862-9842-07e825ec8d86",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "11e193c7-f198-4c6a-b810-accc1bb96d54",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "fd3cb1c9-46e6-44fa-a43c-d650f995da79",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "ce008ca4-9c86-48df-b467-b11bc9261234",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "ac9c57d9-b849-4d34-9fea-43bcfe507200",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "53699174-2e97-454c-91fb-1ad317a50fd3" ],
        "secret" : [ "lkhtua-WklmFp_sd1ed5Ot2xvEsdkugOE1yfMR7YgNrA8Uauxs3d3yyB08sNXyVQnSP1hOF_-4T2pXGESEDHUw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "1e4d3a19-4553-4b84-9ae9-771efddb7d1a",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAhBY8woFWmpRHYm360T2HGz0fXqosu1O7avtbxu69pgxnNpHK39hUkpFTEA6Nefm8sCv4rfpE6pKOm1YjcEbvFJ4aNtMA4HwzFCnPcQ2oV8HQwb4JyTAIva6YtnU1eapNWZrjtKMe+b3y4/0hj+nagaJtnIrfjWlEv4bOSSj+pJYXGB6YGcq4XTIzof3OJv2tU3KXlpgLMvBoMSzulTKnxOqf9EYdxDMjPhSw5tk5rb1yS7t0HTzdF2DswYpXDU0d4hfmwFG696sd8dsjM+hbnocXboZgftGDFb6o1wGfBv2RqMBZQ5pDWHQWNgSGWVVb4ueNEY4EClcveEjpm14ZEQIDAQABAoIBAES4kRodUqKP/OfQEoukeFOKpHSLE0TPFpZdem1wrsjicRyqE6QMmEu9Qjr7Z04Lycjax8I0kIB+iaV11nBG54KRk0/szer9k1GtQxktouUtmGAEcHD1BccyPI/JQW4wVZgGBuxnZelHk0Rc4YZPg/ioOmEUu6SGHVeMWm0j4ABeunjxNDyV/dgSwRwY16ITwj9ifL1iPUFcLf31twPnENtn+opnV1QbVh+6thRm53fVeZSVEUQiep64p1st45QCVY8nootmuzPqb1ifE98qyPQYBQfy+d1jpmeHG1b1sHkT2JsrVTLjdM27vGh8IldvcZx55uxIg5KmaW7EMGJTnPUCgYEAxjjInz528r5fYwBXuO/Aqd+Gr9pcEM4qINclTSZ1e5kU6UvrUk/rSXrO3+Cj3RK4lemCXpjI1w5vr1mVuWpXLtm1qC1IrG+ZLa7BfOJjvqPORcX0ybDB+sRjS61mIwc0ppNhRoH0VbLD8SUzXk4NOFKWCkxnOPOMlxTW9XelMSsCgYEAqpZ+54HiAAg3WHmC6t8N1LEkxv5wno0oILMRvI3nbehcmjytCg9cWm0/VL5dVdPqPAM2RQqdjVerSY4ll5vA8CPoF3cHS5yXlhkkcUXLCYnRJNjlyPxQRJgpMk5w/GM34Zu4R8x6LnowshBqPuTlIXRgl2Sn0bmQlJSgFOaKKLMCgYEAxVLRpHSyRINuwUceDGPfDzwNABIHhFM3bOm/oEWgviFtx7Bj2dTlDIjMV+FwPircxZ9mwHSnui4M0CoF+kX59BGV3Iz3w3B0tB07T+6uDKFUPfEJ9Z2X/OJzVmqPOl958jjUpTPI32bN18iIkmBwmJjd8/KK7w7D7cI5GrK4J3ECgYAX2RZAsy2vJ3blTYd54lkCpQkpMKT55W34tFAEdiomeVeI0Ha4c1FL6v3xkPNnbkrOvPw3Rraj7d+qVs72lPWyHLLzpNZGQcwHVdh8ZW9vE+9DIXduU6e9DzCjMcgl4JENX0Gx9+oU2Uw5eIYB6OoHdUeToqS7cx+9RdHjWh9ydQKBgCDyRb0oJj0fXH6jU9R3L6XNhgRBvq5wVfrwuCst3Fe6vQpdJu8/BohXswOlrAYQIaN1GiQz2x6ZO3NmYAckuYu9mlzONSYEm33Ior09BLW4igFGSxJ+ITkIvDu+Vq3e4efghlFKs0C9UZmJ+ko7w09hm4VcfGtK4r4lbDrOgqgq" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIIClzCCAX8CBgGBPaZj9zANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIyMDYwNzEwMTAyM1oXDTMyMDYwNzEwMTIwM1owDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIQWPMKBVpqUR2Jt+tE9hxs9H16qLLtTu2r7W8buvaYMZzaRyt/YVJKRUxAOjXn5vLAr+K36ROqSjptWI3BG7xSeGjbTAOB8MxQpz3ENqFfB0MG+CckwCL2umLZ1NXmqTVma47SjHvm98uP9IY/p2oGibZyK341pRL+Gzkko/qSWFxgemBnKuF0yM6H9zib9rVNyl5aYCzLwaDEs7pUyp8Tqn/RGHcQzIz4UsObZOa29cku7dB083Rdg7MGKVw1NHeIX5sBRuverHfHbIzPoW56HF26GYH7RgxW+qNcBnwb9kajAWUOaQ1h0FjYEhllVW+LnjRGOBApXL3hI6ZteGRECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEACKfR+pQ3GoBacX8CBHWBFSPUWnn0UVXOcRyam3MTsHz7HeRqVaH5i1afHMQkmB4MUK4gVilPccaucIQh0NGrnAZuKS+E2V0QySEs4dD/Pdk02XTCVFj/22Rx8mUpErqm8jn4dLstbygVPMDjebzJhubTFrbMtbomf0bDoKb1MZw9yTj4fAIDocFz9A3zAIiHd1C52TQEpC1u+uyR8OpkOQB6JKQgSdOSrYCo1VlKpX9cvfqyDok1pgAXeamgYWc7mp4u5JbF2kha/JQmZ4fjNV4m/MVczIK6sDwUUIHENFvJmLFFXd9D3EDxpqUHyjqR34feAtzXarhiD/iMwBMAHw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "c05c4b8f-5911-4e84-92fe-9ed366680384",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "e2a2d254-3c9e-40ab-bf27-3afdb1d69071" ],
        "secret" : [ "QGUabYIfhcr0PpDQbHJOxQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "7420494c-84af-4a89-a7d2-d23b9cc86fd6",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAlDwcTlGon+7sspDpP0YFtPcP7Vfh4F4FapyYj2Byr7NTpstHC+iK7C48vWhdCByDsKnuzJW+qeaHIfbNZk2bBIMANIlwLb/idzNNG15id/mrs6iMf6MKWXMukLoWjN+JLnwTKUxUrGsabgKiMJlE3N1kEObl526aZfRuWRGoWEsIkoVQMon0y4oJtYe0+DkolipQxBGslK/gTeKBMuR4JO3FvLWYu5MrQzrGYi7oKoPryNV7I2JhFNWgedDTfg5erkBpzyL9dzYKXpJkeofz9BN7kaFEYtf6c9R2YyHfQxzYsnbqojtSZFhap5VpRWFT+G4wN1WjoKVS3kMzObQ+hQIDAQABAoIBAH7QFd8imMGJ4tC4i/JncwZnviZr4n7RsIyOPy2Zc0PAhDXS/YrAe+ilfa0EFWKVEkwWdIZtLNmor75spzd3+MAZWhmX4nIhEBqttq9NRawh2bQu41NmJbp0gUerCxOlQHSWDMZt2JpQXiHy+tHcrT7N34deIRymUEwcmjJ0mrI81W1Jun+h9OKoSu5GY1GireRPUtgE3emklXLsL94Yz9XYbcICRrnZ3/NffdtvCIbQmqqXagYwwDqoF1STr/r2BK9lSvOjjioQeaHrLwdcX440hU8TPpSy/jqaA3R6rY5ZmLMVd6sxBDzc+54x6B5MWl2N1x/L/ZE5k1HnHQZOjlkCgYEA/mkPMmk1r4FMddRsVGYxS4ErNmNRZpoxn3TpUXHRDWAIumYIucAi6NF4HkuP5QRgLhD45r54InLyfolTozBkHXaEtqPh+VeEPuPedeyHBUK7hPniDiQ2D/Zb30RlJtkqRAWLdFL0wmQOfvOJ1HCSA/BgQ5/OWMhOZDh6B7oIoyMCgYEAlSk3+4jtdYzhlTNtP5EiwoDLmhWKW5eCFXQ/gAPPYh426lL1Vwg4f/iBySRvFlYRncJyA7KuLlM9fE68mXKFrq17hu3IlTwJoPMIYZIpVnVFuDRCZWAq3/jH1p9VsSGBrQcUhpbU44hu7qymgYQWzgSssRIRJOxOZn2OlVL2JjcCgYAlcvOQuRn09rR5l8ZGejCBa8cfn2kJEGODlGMP4RAjxuIiBgj8xsKcwNDMrNTGomlB/q+Uz67Ba2g0piRQnjvudla8x8zotjA6TbKeay3I4XTW8y2KZVwr51jIubmmCUuGbcaEXf23a6ESoOjGA7gKqmSRL8HhIcMgT4vu/TxuPwKBgA3HXvqHbZgcSYJk28SxfYqGJ0i2kK9hUYz1zh/fOjsQG3aN70f45G89349bJD/l936hRbL9wIVa/yUKiPWL1LmMIQsX0B2pDCKoELAitlrcPnKDsVZ4Cb3i12MGGP5h3/7B1q2QJV5XbhfyLvdr4kdpuyIoTxkgEyX4l0FIBqEFAoGANzZ/FE6PdXf2qQfxdsp03GwA6tuJEUXLZcS/r4o/yEtJUGVR9c92VYDNXemZykoUq0wgdzO8wWP1C15G8Nw50zfL6Wx1Ix5knljTzzlkcbtxXMKRfGy3HMQB9BLCcQO6btVnepbuUyGaqfGsE3GKMJixBh66YSOXuqLNMwtJHvM=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIIClzCCAX8CBgGBPaZkpDANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTIyMDYwNzEwMTAyM1oXDTMyMDYwNzEwMTIwM1owDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJQ8HE5RqJ/u7LKQ6T9GBbT3D+1X4eBeBWqcmI9gcq+zU6bLRwvoiuwuPL1oXQgcg7Cp7syVvqnmhyH2zWZNmwSDADSJcC2/4nczTRteYnf5q7OojH+jCllzLpC6FozfiS58EylMVKxrGm4CojCZRNzdZBDm5edummX0blkRqFhLCJKFUDKJ9MuKCbWHtPg5KJYqUMQRrJSv4E3igTLkeCTtxby1mLuTK0M6xmIu6CqD68jVeyNiYRTVoHnQ034OXq5Aac8i/Xc2Cl6SZHqH8/QTe5GhRGLX+nPUdmMh30Mc2LJ26qI7UmRYWqeVaUVhU/huMDdVo6ClUt5DMzm0PoUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAbUKB3OZEUIiiUYMzg5z68iP0XnryVGvCbvDOtE/qLok7sX4M2d3AZ9uX3KFMhVkXPU/iQzVxgYjGaKr1DetNGZxuTf+eGRIK97s1vU21vGCEIcQ0bOTNdBSs3NPqEk+BF8+QZQbA5KWMwWu3kHlxQXbIhOZH8tXb+iT5tSYO41uRIiLVTSHECwGFBnWoK74BC9dNv/eYICZCt1uz3XBQsrAYrfQIvCG5ZIF0xjSC+Ns50uqVEwwiHWk2E1g/1rbFlE3PAXAqxL3iVy1kc4MrWHCUkgzQrljOB1LapG39CEu1qdh0AUr/xFzC3WOpUP7y43o3BbZ//eCzNjVr61ZAAA==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "3cc5d443-0081-4992-aaa4-bc3016571d9a",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a9fedd62-095c-4857-8370-42e3e2c33ddc",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ebb47058-e7d7-4491-87c0-71bcb9b57353",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e4e6db31-ade2-4df3-87b6-238a620d56d2",
    "alias" : "Browser with Filter on Client 1 Forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client1- Conditional OTP",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 21,
      "autheticatorFlow" : true,
      "flowAlias" : "Forms - Required Role Filtering",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "624983ce-d5f3-44ed-843f-fd5e369fadce",
    "alias" : "Browser with Filter on Client1",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Filtered Cookie Access",
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 31,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client 1 Forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "66eb83a9-895e-43f4-9c41-49691743e5ec",
    "alias" : "Browser with Filter on Client1- Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cee44c81-9a57-470b-9941-d463e8486aff",
    "alias" : "Browser with Filter on Client2",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client2 Filtered Cookie Access",
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 31,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client2 Forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e354ee68-9457-4a0e-a9d6-aa3f4458b764",
    "alias" : "Browser with Filter on Client2 - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9af24f37-46fe-4a88-98b9-bff5a6c2b30f",
    "alias" : "Browser with Filter on Client2 Cookie - Require Role Filtering",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Filtering Role User2 -negate-",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 3,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "18ae22f9-bf08-41fc-bdba-baead1cb82b5",
    "alias" : "Browser with Filter on Client2 Filtered Cookie Access",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 1,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client2 Cookie - Require Role Filtering",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0c8c3b94-3ed5-4ec4-bbfc-142ae5979fa8",
    "alias" : "Browser with Filter on Client2 Forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client2 - Conditional OTP",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 21,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser with Filter on Client2 Forms - Required Role Filtering",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b6a4850c-d5c3-416f-a798-37ce1ecdeb61",
    "alias" : "Browser with Filter on Client2 Forms - Required Role Filtering",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Browser With Filter On Client2  - role Filter",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 3,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "935710c8-2813-4df2-908e-eeeae81132f5",
    "alias" : "Cookie - Require Role Filtering",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Filtering Role Client1 -negate-",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 4,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 5,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "219b5919-c84f-480d-86f4-61e443033f99",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "23011ec7-4ab4-487a-a09b-ea7dd7022076",
    "alias" : "Filtered Cookie Access",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 1,
      "autheticatorFlow" : true,
      "flowAlias" : "Cookie - Require Role Filtering",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b2d021a1-2f2c-450d-913a-13112ea39ce0",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9c49867f-c9e5-40a5-a5b1-e299131a023a",
    "alias" : "Forms - Required Role Filtering",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Filtering Role Client1 -negate-",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 1,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 2,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c9fa2acd-81df-43da-8044-dd32ec1e5e22",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "960f0a2b-ee8b-481f-a991-113352c15783",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2fa3b869-0722-4536-b44d-a3e5bd03583c",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9120821e-3593-494d-98fc-4b15bb75c5aa",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c937b5c4-c3ba-4dfe-bf7e-a3c33e17d61b",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "04821a61-3877-4ecd-9782-316a76401c69",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3448afdf-c042-4ab2-9a5a-11fcaa25a43a",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "17167e64-2119-46ff-bf24-252c03e4fc3c",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "001d09a8-ab2c-4475-a3e5-b9f6aefe138f",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3433f855-e51c-40e6-88c3-3c173530a38b",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "72f156bd-c1c7-4e04-9809-7de84e66ee77",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "44713ea7-258c-47a1-aed3-59a3e7ae04a5",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "216e556f-3982-48fa-bf70-b05d5ade0a07",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "36a265ed-33b9-499f-9de9-c0c6b7685a97",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "178d3cc7-3137-4bee-a7e6-a9dde018459f",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "581aa0b5-b79f-451d-a474-ece71a50aaeb",
    "alias" : "Access Role Filtering -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-2.Access test Client 2"
    }
  }, {
    "id" : "5c7562ee-2523-49c2-b5d1-5263f60a79ca",
    "alias" : "Access role Filtering -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "79654a22-6cac-443c-9a81-dd29be991083",
    "alias" : "Browser With Filter On Client2  - role Filter",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-2.Access test Client 2"
    }
  }, {
    "id" : "a012bcb3-23cd-465f-8517-4c12e4a08882",
    "alias" : "Filetring Role Client1 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "6ad7cefb-4550-4d04-a708-f5fb5544fc29",
    "alias" : "Filetring Role Client2 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-2.Access test Client 2"
    }
  }, {
    "id" : "5917c569-e129-4cc9-9ea3-e8ef6a55da3e",
    "alias" : "Filtering Role Client1 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "2ae48aac-b843-4ce9-9340-666209afdbab",
    "alias" : "Filtering Role Client1 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "43eb1a8a-c2a2-4a3c-aa2f-d5055e711786",
    "alias" : "Filtering Role User1 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "98e75c61-0775-4ff9-9d9c-c138aed2a2f0",
    "alias" : "Filtering Role User2 -negate-",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-2.Access test Client 2"
    }
  }, {
    "id" : "607b6267-f15d-416d-920e-67ad7976e430",
    "alias" : "Testing Access Role",
    "config" : {
      "negate" : "true",
      "condUserRole" : "test-client-id-1.Access test Client 1"
    }
  }, {
    "id" : "2d4fe34d-5feb-448d-a846-5d56d7bee338",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "b14f83a2-40e4-4b73-882a-3a07d4ab51ae",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}